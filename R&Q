#include"dht11.h"
#include <IRremote.h>
#include <U8glib.h>
const unsigned char PROGMEM ri[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x03,0x00,
0x00,0x00,0x00,0x00,0xE0,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0x80,
0x00,0x00,0x00,0x00,0xF0,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0xC0,
0x00,0x06,0x00,0x00,0xF8,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0x80,
0x00,0x0F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x00,0x1E,0x00,0x00,0xC0,0x00,0x33,0x00,
0x00,0x0F,0x00,0x00,0xF0,0x80,0x3F,0x00,0x00,0x3C,0x00,0x01,0xC0,0x00,0xF7,0x00,
0x00,0x07,0x00,0x01,0xE7,0xE0,0x7F,0x00,0x00,0x60,0x40,0x01,0xC0,0x00,0xFB,0xC0,
0x03,0x87,0x00,0x01,0x1F,0xE0,0x5F,0x0F,0x00,0x47,0xF0,0x01,0xC0,0x01,0xF7,0xC0,
0x03,0xC7,0x00,0x00,0x7F,0xE0,0x1E,0x1F,0x00,0x8F,0xF0,0x01,0xC0,0x01,0xFF,0x80,
0x03,0xC7,0x00,0x00,0xFF,0xC0,0x3E,0x3F,0x01,0x9F,0xF8,0x01,0xC0,0x03,0xFF,0x00,
0x03,0xC7,0x00,0x03,0xFE,0x00,0x7F,0x7F,0x01,0xBE,0x38,0x01,0xF0,0x03,0xFF,0x80,
0x03,0xC7,0x00,0x07,0xF8,0x00,0x7F,0xF7,0x03,0x7E,0x38,0x01,0xF8,0x03,0xFB,0x80,
0x03,0xC7,0x00,0x1F,0xE0,0x00,0x7F,0xAE,0x07,0xEF,0x70,0x03,0xF8,0x03,0xF9,0xC0,
0x03,0xC7,0x00,0x3F,0x98,0x00,0x7F,0xEE,0x07,0xEF,0xE0,0x07,0xF8,0x01,0xF1,0x80,
0x03,0xC7,0xF0,0xFE,0x78,0x00,0xFF,0xFE,0x07,0xFF,0xE0,0x0F,0xC0,0x01,0xF3,0xE0,
0x0F,0x87,0xF0,0xFC,0xFC,0x01,0xFF,0x7E,0x07,0xFF,0x00,0x07,0x80,0x01,0x87,0xF0,
0x1F,0x87,0xF0,0xF1,0xFC,0x01,0xFE,0x76,0x07,0x7F,0x00,0x03,0x80,0x00,0x0F,0xF0,
0x1F,0x8F,0xC0,0xE1,0xD8,0x01,0xFF,0xF6,0x07,0x5F,0x00,0x03,0xC0,0x00,0x7F,0xF0,
0x0F,0x8F,0x80,0xC1,0xD8,0x01,0xFF,0xF6,0x06,0xDE,0x00,0x07,0xC0,0x02,0xFC,0x70,
0x03,0x9F,0x00,0x01,0xF8,0x01,0xFF,0xF6,0x02,0xFE,0x00,0x07,0xE0,0x03,0xF6,0x40,
0x03,0x3F,0x00,0x03,0xF0,0x00,0x3F,0x76,0x00,0xFF,0x80,0x06,0x70,0x07,0xCF,0x00,
0x03,0xFE,0x00,0x03,0xE0,0x00,0x7C,0x66,0x00,0xFF,0x80,0x06,0x70,0x07,0x1F,0x00,
0x03,0xFE,0x00,0x03,0xE0,0x00,0xFE,0x7E,0x00,0x7F,0x80,0x0E,0x38,0x07,0x1F,0x00,
0x03,0xEF,0x00,0x03,0xE0,0x00,0xFE,0x7C,0x00,0xFF,0x80,0x1C,0x3C,0x0F,0x0E,0x00,
0x03,0xCF,0xC0,0x01,0xF0,0x00,0x1E,0x78,0x00,0xFD,0x80,0x18,0x3E,0x0E,0x0E,0x00,
0x0F,0x87,0xC0,0x00,0x7C,0x00,0x3E,0x70,0x00,0xDF,0x80,0x38,0x1F,0x0E,0x0F,0xC0,
0x3F,0x03,0xC0,0x00,0x7E,0x00,0x3C,0x60,0x01,0xDF,0x00,0x70,0x0F,0x84,0x3F,0xC0,
0x3E,0x03,0xC0,0x00,0x7E,0x00,0x00,0x60,0x01,0xFE,0x00,0x60,0x07,0xC0,0xFF,0xC0,
0x3C,0x07,0xC0,0x06,0x6E,0x00,0x00,0x60,0x00,0xFE,0x00,0x00,0x03,0x00,0xFE,0x00,
0x00,0x0F,0x80,0x0E,0xEE,0x00,0x00,0x60,0x00,0xFC,0x00,0x00,0x00,0x00,0xFE,0x00,
0x00,0x04,0x00,0x0E,0xE6,0x00,0x00,0x60,0x00,0x0C,0x00,0x00,0x00,0x00,0xCE,0x00,
0x00,0x00,0x00,0x0E,0x60,0x00,0x00,0x60,0x00,0x0F,0xC0,0x00,0x00,0x00,0x0E,0x00,
0x00,0x00,0x00,0x0E,0x60,0x00,0x00,0x60,0x00,0x07,0xE0,0x00,0x00,0x00,0x3C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x07,0xE0,0x00,0x00,0x00,0x3C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
  //引用dht11库文件，使得下面可以调用相关参数
dht11 DHT11;
#define DHT11PIN 2     //定义温湿度针脚号为2号引脚
#define AtomizerPIN 3    //定义雾化片脚号为3号引脚
#define INTERVAL_LCD             20             //定义OLED刷新时间间隔  
unsigned long lcd_time = millis();                 //OLED刷新时间计时器
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);     //设置OLED型号  
//-------字体设置，大、中、小
#define setFont_L u8g.setFont(u8g_font_7x13)
#define setFont_M u8g.setFont(u8g_font_fixed_v0r)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_SS u8g.setFont(u8g_font_fub25n)
int recvPin = 9;//定义红外接收器的引脚为9
IRrecv irrecv(recvPin);
decode_results results;
long KEY_CODE_ONE = 0xFF30CF;
long KEY_CODE_TWO = 0xFF18E7;
long KEY_CODE_THREE = 0xFF7A85;
long KEY_CODE_FOUR = 0xFF10EF;
long KEY_CODE_LONG_PRESS = 0xFFFFFFFF;
long longPressKey = -1; //长按下的那个键
void ledOn(int PIN) {
  digitalWrite(PIN, HIGH);
}
void ledOff(int erPIN) {
  digitalWrite(erPIN, LOW);
}
void setup(){         //初始化设置
  Serial.begin(9600);      //设置波特率参数
  pinMode(DHT11PIN,OUTPUT);
  irrecv.enableIRIn(); // 初始化红外接收器
  pinMode(AtomizerPIN,OUTPUT);
}

void loop(){                          //循环
  if (irrecv.decode(&results)) {
    Serial.println(results.value, HEX);//以16进制换行输出接收代码
    Serial.println();//为了便于观看输出结果增加一个空行
    irrecv.resume(); // 接收下一个值
  }
  //按下１键的事件
  if (results.value == KEY_CODE_ONE ) {
    ledOn(AtomizerPIN);
    longPressKey = KEY_CODE_ONE;
  }


  int chk = DHT11.read(DHT11PIN);     //将读取到的值赋给chk
 
  int hum=(float)DHT11.humidity;      //将湿度值赋给hum
  Serial.print("hum:");
  Serial.print(hum);
  Serial.print("%");
 
  int tem=(float)DHT11.temperature;   //将湿度值赋给tem
  Serial.print(" tem:");
  Serial.print(tem);
  Serial.println("oC");

  if(results.value == KEY_CODE_ONE )//湿度低于60%，雾化片启动工作
  {
    digitalWrite(AtomizerPIN, LOW);//输出LOW电平,继电器模块闭合 
    Serial.println("Atomizer:start");
   }
   else
   {
    digitalWrite(AtomizerPIN, HIGH);//输出LOW电平,继电器模块闭合 
    Serial.println("Atomizer:stop");
   }
     delay(2000);
     // put your main code here, to run repeatedly:
  char ch='2';
  u8g.firstPage();
  do {
    setFont_M;
    u8g.drawBitmapP(0, 0, 16, 64, ri);
    //u8g.drawXBMP(0, 0, 128, 64, ri);
    /*u8g.setPrintPos(0,10);
    u8g.print("char 2:");
    u8g.setPrintPos(0,25);
    u8g.print(ch,HEX);
    u8g.setPrintPos(0,40);
    u8g.print(ch,BIN);*/
  }while (u8g.nextPage());
